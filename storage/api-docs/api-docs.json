{
    "openapi": "3.0.0",
    "info": {
        "title": "HealthDesk Plus API",
        "description": "Comprehensive healthcare management system for doctors, patients, appointments, prescriptions, and medical records.",
        "contact": {
            "name": "HealthDesk Plus Support",
            "email": "support@healthdeskplus.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Local Development Server"
        },
        {
            "url": "https://api.healthdeskplus.com/api",
            "description": "Production Server"
        }
    ],
    "paths": {
        "/ai/autocomplete/clinic": {
            "post": {
                "tags": [
                    "AI Assistant"
                ],
                "summary": "Get clinic autocomplete suggestions",
                "description": "Get smart autocomplete suggestions for clinic names and addresses using Google Places API",
                "operationId": "20557ad96eb7787fbeefa74a37499e20",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "input"
                                ],
                                "properties": {
                                    "input": {
                                        "description": "Input text for autocomplete",
                                        "type": "string",
                                        "example": "Apollo"
                                    },
                                    "city": {
                                        "description": "City to filter results",
                                        "type": "string",
                                        "example": "Mumbai"
                                    },
                                    "types": {
                                        "description": "Types of places to search",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "hospital",
                                            "doctor"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Autocomplete suggestions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "place_id": {
                                                        "type": "string",
                                                        "example": "mock_apollo_mumbai"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Apollo Hospital, Mumbai"
                                                    },
                                                    "main_text": {
                                                        "type": "string",
                                                        "example": "Apollo Hospital"
                                                    },
                                                    "secondary_text": {
                                                        "type": "string",
                                                        "example": "Mumbai, Maharashtra, India"
                                                    },
                                                    "types": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/autocomplete/address": {
            "post": {
                "tags": [
                    "AI Assistant"
                ],
                "summary": "Get address autocomplete suggestions",
                "description": "Get smart autocomplete suggestions for addresses using Google Places API",
                "operationId": "894be39a6aec7dedfb24a598c3cec725",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "input"
                                ],
                                "properties": {
                                    "input": {
                                        "description": "Input text for autocomplete",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "description": "City to filter results",
                                        "type": "string",
                                        "example": "Mumbai"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address autocomplete suggestions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "place_id": {
                                                        "type": "string",
                                                        "example": "mock_apollo_mumbai"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "123 Main Street, Mumbai"
                                                    },
                                                    "main_text": {
                                                        "type": "string",
                                                        "example": "123 Main Street"
                                                    },
                                                    "secondary_text": {
                                                        "type": "string",
                                                        "example": "Mumbai, Maharashtra, India"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/place-details": {
            "post": {
                "tags": [
                    "AI Assistant"
                ],
                "summary": "Get place details by place ID",
                "description": "Get detailed information about a place using Google Places API",
                "operationId": "11a42c50f352310b1d4c880b32e2063a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "place_id"
                                ],
                                "properties": {
                                    "place_id": {
                                        "description": "Google Places place ID",
                                        "type": "string",
                                        "example": "mock_apollo_mumbai"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Place details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Apollo Hospital"
                                                },
                                                "formatted_address": {
                                                    "type": "string",
                                                    "example": "123 Main St, Mumbai, Maharashtra, India"
                                                },
                                                "clinic_address": {
                                                    "type": "string",
                                                    "example": "123 Main St"
                                                },
                                                "clinic_city": {
                                                    "type": "string",
                                                    "example": "Mumbai"
                                                },
                                                "clinic_state": {
                                                    "type": "string",
                                                    "example": "Maharashtra"
                                                },
                                                "clinic_pincode": {
                                                    "type": "string",
                                                    "example": "400001"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+91-22-12345678"
                                                },
                                                "website": {
                                                    "type": "string",
                                                    "example": "https://apollohospitals.com"
                                                },
                                                "coordinates": {
                                                    "properties": {
                                                        "lat": {
                                                            "type": "number",
                                                            "example": 19.076
                                                        },
                                                        "lng": {
                                                            "type": "number",
                                                            "example": 72.8777
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/detect-specialization": {
            "post": {
                "tags": [
                    "AI Assistant"
                ],
                "summary": "Detect specialization from qualification text",
                "description": "Use enhanced AI and rule-based detection to identify medical specialization from qualification text",
                "operationId": "8e33c3c2eb7e898aaa7f985b02485f4f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "qualification"
                                ],
                                "properties": {
                                    "qualification": {
                                        "description": "Medical qualification text",
                                        "type": "string",
                                        "example": "MBBS, MD"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Specialization detected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "specialization": {
                                                    "type": "string",
                                                    "example": "Allopathy"
                                                },
                                                "confidence": {
                                                    "type": "number",
                                                    "example": 0.95
                                                },
                                                "extracted_qualifications": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "suggested_specialization_text": {
                                                    "type": "string",
                                                    "example": "Allopathy"
                                                },
                                                "detection_method": {
                                                    "type": "string",
                                                    "example": "rule_based"
                                                },
                                                "specialization_details": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Allopathy"
                                                        },
                                                        "full_name": {
                                                            "type": "string",
                                                            "example": "Allopathic Medicine"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Modern Western medicine system"
                                                        },
                                                        "council": {
                                                            "type": "string",
                                                            "example": "Medical Council of India (MCI)"
                                                        },
                                                        "practice_type": {
                                                            "type": "string",
                                                            "example": "allopathy"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/refine-input": {
            "post": {
                "tags": [
                    "AI Assistant"
                ],
                "summary": "Refine and correct user input",
                "description": "Use OpenAI to refine and correct messy user input",
                "operationId": "73e292fc22073967d4210dcba6b11872",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "input",
                                    "context"
                                ],
                                "properties": {
                                    "input": {
                                        "description": "Input text to refine",
                                        "type": "string",
                                        "example": "Applo hosp"
                                    },
                                    "context": {
                                        "description": "Context for refinement",
                                        "type": "string",
                                        "enum": [
                                            "clinic_name",
                                            "address",
                                            "qualification",
                                            "general"
                                        ],
                                        "example": "clinic_name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Input refined successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "original_input": {
                                                    "type": "string",
                                                    "example": "Applo hosp"
                                                },
                                                "refined_input": {
                                                    "type": "string",
                                                    "example": "Apollo Hospital"
                                                },
                                                "was_changed": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/specializations": {
            "get": {
                "tags": [
                    "AI Assistant"
                ],
                "summary": "Get all supported specializations",
                "description": "Get list of all supported medical specializations with details",
                "operationId": "3d67f4c6629b393bbc89e50f47b27b35",
                "responses": {
                    "200": {
                        "description": "Specializations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "Allopathy": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Allopathy"
                                                        },
                                                        "full_name": {
                                                            "type": "string",
                                                            "example": "Allopathic Medicine"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Modern Western medicine system"
                                                        },
                                                        "common_qualifications": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "council": {
                                                            "type": "string",
                                                            "example": "Medical Council of India (MCI)"
                                                        },
                                                        "practice_type": {
                                                            "type": "string",
                                                            "example": "allopathy"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/validate-qualification": {
            "post": {
                "tags": [
                    "AI Assistant"
                ],
                "summary": "Validate qualification against specialization",
                "description": "Validate if a qualification matches a specific specialization",
                "operationId": "828295713e43b31aa14092e59d9a85be",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "qualification",
                                    "specialization"
                                ],
                                "properties": {
                                    "qualification": {
                                        "description": "Medical qualification",
                                        "type": "string",
                                        "example": "MBBS"
                                    },
                                    "specialization": {
                                        "description": "Medical specialization",
                                        "type": "string",
                                        "example": "Allopathy"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Qualification validation completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "is_valid": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "matched_qualification": {
                                                    "type": "string",
                                                    "example": "MBBS"
                                                },
                                                "suggested_qualifications": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "confidence": {
                                                    "type": "number",
                                                    "example": 0.9
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/suggest-qualifications": {
            "post": {
                "tags": [
                    "AI Assistant"
                ],
                "summary": "Suggest qualifications for specialization",
                "description": "Get suggested qualifications for a specific medical specialization",
                "operationId": "7cbd00d4ca97d385d63a6c1faea9e420",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "specialization"
                                ],
                                "properties": {
                                    "specialization": {
                                        "description": "Medical specialization",
                                        "type": "string",
                                        "example": "Allopathy"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Qualifications suggested successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "primary": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "secondary": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "diploma": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/onboarding/chat": {
            "post": {
                "tags": [
                    "AI Onboarding Assistant"
                ],
                "summary": "Chat with AI onboarding assistant",
                "description": "Have a conversational interaction with the AI assistant to complete onboarding",
                "operationId": "8343f54c674520decc65668640af055e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "description": "User's message to the AI assistant",
                                        "type": "string",
                                        "example": "Hi, I'm Dr. John Doe"
                                    },
                                    "context": {
                                        "description": "Additional context for the conversation",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "AI response generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "response": {
                                                    "type": "string",
                                                    "example": "Hello Dr. Doe! Nice to meet you. I'm here to help you complete your registration."
                                                },
                                                "form_data": {
                                                    "description": "Extracted form data from the conversation",
                                                    "type": "object"
                                                },
                                                "next_action": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "example": "update_profile"
                                                        },
                                                        "step": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Updating profile with extracted information"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "current_step": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "completion_percentage": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "suggestions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "Tell me about your medical qualification",
                                                        "What is your clinic name?"
                                                    ]
                                                },
                                                "requires_confirmation": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/ai/onboarding/suggestions": {
            "get": {
                "tags": [
                    "AI Onboarding Assistant"
                ],
                "summary": "Get conversation suggestions",
                "description": "Get suggested conversation starters based on current onboarding step",
                "operationId": "33034da58a73f13f93fccf6b4e66eb49",
                "responses": {
                    "200": {
                        "description": "Suggestions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "suggestions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "Hi! I'm Dr. John Doe",
                                                        "I have MBBS and MD degrees"
                                                    ]
                                                },
                                                "current_step": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "step_title": {
                                                    "type": "string",
                                                    "example": "Basic Information"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/ai/onboarding/progress": {
            "get": {
                "tags": [
                    "AI Onboarding Assistant"
                ],
                "summary": "Get onboarding progress summary",
                "description": "Get detailed progress summary of the onboarding process",
                "operationId": "105337bc54232f5eb19d354907f45659",
                "responses": {
                    "200": {
                        "description": "Progress summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "current_step": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "completion_percentage": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "steps": {
                                                    "properties": {
                                                        "1": {
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "example": "Basic Information"
                                                                },
                                                                "description": {
                                                                    "type": "string",
                                                                    "example": "Tell us about yourself"
                                                                },
                                                                "completed": {
                                                                    "type": "boolean",
                                                                    "example": true
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next_step": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "is_complete": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/ai/onboarding/update-profile": {
            "post": {
                "tags": [
                    "AI Onboarding Assistant"
                ],
                "summary": "Update profile from AI conversation",
                "description": "Update doctor profile with data extracted from AI conversation",
                "operationId": "074fc307e723dbf241981089fde4aace",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "form_data"
                                ],
                                "properties": {
                                    "form_data": {
                                        "description": "Form data extracted from conversation",
                                        "type": "object"
                                    },
                                    "confirm": {
                                        "description": "Whether to confirm the update",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "updated_fields": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "completion_percentage": {
                                                    "type": "integer",
                                                    "example": 75
                                                },
                                                "next_step": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/ai/onboarding/start": {
            "post": {
                "tags": [
                    "AI Onboarding Assistant"
                ],
                "summary": "Start AI onboarding conversation",
                "description": "Initialize the AI onboarding assistant and get the first message",
                "operationId": "568bd5f57365cd1a0f5c14570a6611a6",
                "responses": {
                    "200": {
                        "description": "AI onboarding started successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "welcome_message": {
                                                    "type": "string",
                                                    "example": "Hello! I'm your AI assistant here to help you complete your doctor registration."
                                                },
                                                "current_step": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "completion_percentage": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "suggestions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "progress": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get all appointments",
                "description": "Retrieve a paginated list of all appointments for the authenticated doctor",
                "operationId": "b8c7b364f8969997096bb5cc471278c2",
                "responses": {
                    "200": {
                        "description": "Appointments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new doctor (Don't use: Only for testing purposes)",
                "description": "Register a new doctor with practice information",
                "operationId": "08136088c4862c313b35d6518bab8d3a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "practice_name",
                                    "practice_type",
                                    "first_name",
                                    "last_name",
                                    "qualification",
                                    "phone"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Full name",
                                        "type": "string",
                                        "example": "Dr. John Doe"
                                    },
                                    "email": {
                                        "description": "Email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "practice_name": {
                                        "description": "Practice/clinic name",
                                        "type": "string",
                                        "example": "City Medical Center"
                                    },
                                    "practice_type": {
                                        "description": "Type of medical practice",
                                        "type": "string",
                                        "enum": [
                                            "allopathy",
                                            "homeopathy",
                                            "ayurvedic"
                                        ],
                                        "example": "allopathy"
                                    },
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "qualification": {
                                        "description": "Medical qualifications",
                                        "type": "string",
                                        "example": "MBBS, MD"
                                    },
                                    "specialization": {
                                        "description": "Medical specialization",
                                        "type": "string",
                                        "example": "General Medicine",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "description": "Phone number",
                                        "type": "string",
                                        "example": "+91-9876543210"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Dr. John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "user_type": {
                                                            "type": "string",
                                                            "example": "doctor"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate user and return access token",
                "operationId": "99d66635c4992aeaa6aa44ff653d0563",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Dr. John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "user_type": {
                                                            "type": "string",
                                                            "example": "doctor"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Revoke the current access token",
                "operationId": "6abf3b64a4bc7838d56346f05a5153af",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/profile": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get user profile",
                "description": "Get the authenticated user's profile information",
                "operationId": "bd0250ee34235b4fc170a8f1e28f4bd5",
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Dr. John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "user_type": {
                                                    "type": "string",
                                                    "example": "doctor"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset link",
                "description": "Send a password reset link to the user's email address",
                "operationId": "fea89d2766defe4ad877001920e3f289",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent to your email address"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or email not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "We couldn't find a user with that email address"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Please wait before retrying"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password",
                "description": "Reset user password using the token from email",
                "operationId": "b8d03d5b689dcb65d3771f62d4f90a24",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "New password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "token": {
                                        "description": "Reset token from email",
                                        "type": "string",
                                        "example": "abc123..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password has been reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired reset token"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dashboard/stats": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get dashboard statistics",
                "description": "Retrieve comprehensive statistics for the doctor's dashboard including patient counts, appointment metrics, and practice analytics",
                "operationId": "06b55ec316b401263ae54a499fc977ad",
                "responses": {
                    "200": {
                        "description": "Dashboard statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total_patients": {
                                                    "description": "Total number of patients",
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "total_appointments": {
                                                    "description": "Total number of appointments",
                                                    "type": "integer",
                                                    "example": 450
                                                },
                                                "today_appointments": {
                                                    "description": "Appointments scheduled for today",
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "upcoming_appointments": {
                                                    "description": "Future scheduled appointments",
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "completed_appointments": {
                                                    "description": "Completed appointments",
                                                    "type": "integer",
                                                    "example": 380
                                                },
                                                "total_prescriptions": {
                                                    "description": "Total prescriptions issued",
                                                    "type": "integer",
                                                    "example": 320
                                                },
                                                "total_medical_records": {
                                                    "description": "Total medical records created",
                                                    "type": "integer",
                                                    "example": 450
                                                },
                                                "pending_appointments": {
                                                    "description": "Appointments pending confirmation",
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "cancelled_appointments": {
                                                    "description": "Cancelled appointments",
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "monthly_revenue": {
                                                    "description": "Monthly revenue",
                                                    "type": "number",
                                                    "format": "decimal",
                                                    "example": 125000
                                                },
                                                "average_consultation_fee": {
                                                    "description": "Average consultation fee",
                                                    "type": "number",
                                                    "format": "decimal",
                                                    "example": 500
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Doctor profile not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/ai/process-document": {
            "post": {
                "tags": [
                    "Document Processing"
                ],
                "summary": "Process uploaded document with OCR and AI extraction",
                "description": "Upload a document and extract structured data using OCR and AI",
                "operationId": "16fa71686a8e53c4766c7a85690cc391",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "document": {
                                        "description": "Document file (image or PDF)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "document_type": {
                                        "description": "Type of document",
                                        "type": "string",
                                        "enum": [
                                            "certificate",
                                            "license",
                                            "id_card",
                                            "degree"
                                        ],
                                        "example": "certificate"
                                    },
                                    "auto_fill_form": {
                                        "description": "Whether to auto-fill form fields",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Document processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "document_type": {
                                                    "type": "string",
                                                    "example": "certificate"
                                                },
                                                "raw_text": {
                                                    "type": "string",
                                                    "example": "Dr. John Doe MBBS..."
                                                },
                                                "structured_data": {
                                                    "properties": {
                                                        "doctor_name": {
                                                            "type": "string",
                                                            "example": "Dr. John Doe"
                                                        },
                                                        "registration_number": {
                                                            "type": "string",
                                                            "example": "ABC123456"
                                                        },
                                                        "qualification": {
                                                            "type": "string",
                                                            "example": "MBBS, MD"
                                                        },
                                                        "issuing_authority": {
                                                            "type": "string",
                                                            "example": "Medical Council of India"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "confidence": {
                                                    "type": "number",
                                                    "example": 0.85
                                                },
                                                "validation": {
                                                    "properties": {
                                                        "is_valid": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "confidence_score": {
                                                            "type": "number",
                                                            "example": 0.85
                                                        },
                                                        "missing_fields": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "warnings": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "suggestions": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "form_data": {
                                                    "description": "Auto-filled form data",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/batch-process-documents": {
            "post": {
                "tags": [
                    "Document Processing"
                ],
                "summary": "Process multiple documents in batch",
                "description": "Upload multiple documents and extract structured data from all",
                "operationId": "2a6e2af2634e39e02c5bbc2b8490dfdd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "documents": {
                                        "description": "Document files",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "document_types": {
                                        "description": "Types of documents (certificate, license, etc.)",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Documents processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "document_type": {
                                                        "type": "string"
                                                    },
                                                    "structured_data": {
                                                        "type": "object"
                                                    },
                                                    "confidence": {
                                                        "type": "number"
                                                    },
                                                    "validation": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/extract-text": {
            "post": {
                "tags": [
                    "Document Processing"
                ],
                "summary": "Extract text from document using OCR",
                "description": "Extract raw text from uploaded document using OCR",
                "operationId": "644f1ecbebaeab1df44900085be3584f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "document": {
                                        "description": "Document file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Text extracted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "text": {
                                                    "type": "string",
                                                    "example": "Dr. John Doe MBBS..."
                                                },
                                                "confidence": {
                                                    "type": "number",
                                                    "example": 0.85
                                                },
                                                "word_count": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/translate": {
            "post": {
                "tags": [
                    "Language Support"
                ],
                "summary": "Translate text to target language",
                "description": "Translate text using Google Translate API",
                "operationId": "ed489a0d36f140968214a3571f2c1688",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "text",
                                    "target_language"
                                ],
                                "properties": {
                                    "text": {
                                        "description": "Text to translate",
                                        "type": "string",
                                        "example": "Hello, how are you?"
                                    },
                                    "target_language": {
                                        "description": "Target language code",
                                        "type": "string",
                                        "example": "hi"
                                    },
                                    "source_language": {
                                        "description": "Source language code (optional)",
                                        "type": "string",
                                        "example": "en"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Translation completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "text": {
                                                    "type": "string",
                                                    "example": "नमस्ते, आप कैसे हैं?"
                                                },
                                                "source_language": {
                                                    "type": "string",
                                                    "example": "en"
                                                },
                                                "target_language": {
                                                    "type": "string",
                                                    "example": "hi"
                                                },
                                                "translated": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "confidence": {
                                                    "type": "number",
                                                    "example": 0.95
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/translate-batch": {
            "post": {
                "tags": [
                    "Language Support"
                ],
                "summary": "Translate multiple texts",
                "description": "Translate multiple texts in a single request",
                "operationId": "46ab2f0dc878c2bbc861e2988a060277",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "texts",
                                    "target_language"
                                ],
                                "properties": {
                                    "texts": {
                                        "description": "Texts to translate",
                                        "type": "object",
                                        "example": {
                                            "greeting": "Hello",
                                            "farewell": "Goodbye"
                                        }
                                    },
                                    "target_language": {
                                        "description": "Target language code",
                                        "type": "string",
                                        "example": "hi"
                                    },
                                    "source_language": {
                                        "description": "Source language code (optional)",
                                        "type": "string",
                                        "example": "en"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Batch translation completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "greeting": {
                                                    "properties": {
                                                        "success": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "text": {
                                                            "type": "string",
                                                            "example": "नमस्ते"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "farewell": {
                                                    "properties": {
                                                        "success": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "text": {
                                                            "type": "string",
                                                            "example": "अलविदा"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/detect-language": {
            "post": {
                "tags": [
                    "Language Support"
                ],
                "summary": "Detect language of text",
                "description": "Detect the language of input text using Google Translate API",
                "operationId": "69cde1be2d92cc00ca2e8f351bd285d0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "text"
                                ],
                                "properties": {
                                    "text": {
                                        "description": "Text to detect language for",
                                        "type": "string",
                                        "example": "नमस्ते, आप कैसे हैं?"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Language detection completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "language": {
                                                    "type": "string",
                                                    "example": "hi"
                                                },
                                                "confidence": {
                                                    "type": "number",
                                                    "example": 0.95
                                                },
                                                "language_name": {
                                                    "type": "string",
                                                    "example": "Hindi"
                                                },
                                                "native_name": {
                                                    "type": "string",
                                                    "example": "हिन्दी"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/languages": {
            "get": {
                "tags": [
                    "Language Support"
                ],
                "summary": "Get supported languages",
                "description": "Get list of all supported languages for translation",
                "operationId": "d85795a43e4681db42b98050d7ba3909",
                "responses": {
                    "200": {
                        "description": "Supported languages retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "en": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "English"
                                                        },
                                                        "native_name": {
                                                            "type": "string",
                                                            "example": "English"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "hi": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Hindi"
                                                        },
                                                        "native_name": {
                                                            "type": "string",
                                                            "example": "हिन्दी"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/languages/region/{region}": {
            "get": {
                "tags": [
                    "Language Support"
                ],
                "summary": "Get language preferences for region",
                "description": "Get language preferences for a specific region",
                "operationId": "9ef433c255a539305054e527bd1c8dda",
                "parameters": [
                    {
                        "name": "region",
                        "in": "path",
                        "description": "Region code (e.g., IN, US, GB)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "IN"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language preferences retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "region": {
                                                    "type": "string",
                                                    "example": "IN"
                                                },
                                                "languages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "hi",
                                                        "en",
                                                        "ta",
                                                        "te"
                                                    ]
                                                },
                                                "primary_language": {
                                                    "type": "string",
                                                    "example": "hi"
                                                },
                                                "fallback_language": {
                                                    "type": "string",
                                                    "example": "en"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/medical-terms": {
            "get": {
                "tags": [
                    "Language Support"
                ],
                "summary": "Get medical terms in target language",
                "description": "Get common medical terms translated to target language",
                "operationId": "6f3d552d9f49515e8c19538e891c4801",
                "parameters": [
                    {
                        "name": "language",
                        "in": "query",
                        "description": "Target language code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "hi"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Medical terms retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "language": {
                                                    "type": "string",
                                                    "example": "hi"
                                                },
                                                "terms": {
                                                    "properties": {
                                                        "doctor": {
                                                            "type": "string",
                                                            "example": "डॉक्टर"
                                                        },
                                                        "patient": {
                                                            "type": "string",
                                                            "example": "मरीज"
                                                        },
                                                        "appointment": {
                                                            "type": "string",
                                                            "example": "अपॉइंटमेंट"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ai/detect-user-language": {
            "get": {
                "tags": [
                    "Language Support"
                ],
                "summary": "Detect user's preferred language",
                "description": "Detect user's preferred language from request headers and parameters",
                "operationId": "77d7c7fa7853aa3e36707269fd1d2474",
                "responses": {
                    "200": {
                        "description": "User language detected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "language": {
                                                    "type": "string",
                                                    "example": "hi"
                                                },
                                                "language_name": {
                                                    "type": "string",
                                                    "example": "Hindi"
                                                },
                                                "native_name": {
                                                    "type": "string",
                                                    "example": "हिन्दी"
                                                },
                                                "detection_method": {
                                                    "type": "string",
                                                    "example": "accept_language_header"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/onboarding/quick-register": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Quick doctor registration",
                "description": "Step 1: Quick registration with minimal fields for doctors",
                "operationId": "977899db05e17166fdfd8d9ca3ad0797",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone",
                                    "specialization"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Full name",
                                        "type": "string",
                                        "example": "Dr. John Doe"
                                    },
                                    "email": {
                                        "description": "Email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "description": "Phone number with country code",
                                        "type": "string",
                                        "example": "+91-9876543210"
                                    },
                                    "specialization": {
                                        "description": "Medical specialization",
                                        "type": "string",
                                        "enum": [
                                            "Allopathy",
                                            "Homeopathy",
                                            "Ayurveda"
                                        ],
                                        "example": "Allopathy"
                                    },
                                    "password": {
                                        "description": "Password (optional for social login)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "provider": {
                                        "description": "Registration method",
                                        "type": "string",
                                        "enum": [
                                            "google",
                                            "facebook",
                                            "email"
                                        ],
                                        "example": "email"
                                    },
                                    "provider_id": {
                                        "description": "Social provider ID (if applicable)",
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "avatar": {
                                        "description": "Profile photo URL (if from social login)",
                                        "type": "string",
                                        "example": "https://example.com/avatar.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Dr. John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "user_type": {
                                                            "type": "string",
                                                            "example": "doctor"
                                                        },
                                                        "avatar": {
                                                            "type": "string",
                                                            "example": "https://example.com/avatar.jpg"
                                                        },
                                                        "provider": {
                                                            "type": "string",
                                                            "example": "google"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "doctor": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "specialization": {
                                                            "type": "string",
                                                            "example": "Allopathy"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+91-9876543210"
                                                        },
                                                        "onboarding_step": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "onboarding_completed": {
                                                            "type": "boolean",
                                                            "example": false
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Registration failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/onboarding/professional-info": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Update professional information",
                "description": "Step 2.1: Update doctor's professional information",
                "operationId": "44f067951161fb4d06fe915dd9fc654f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "qualification": {
                                        "description": "Medical qualifications",
                                        "type": "string",
                                        "example": "MBBS, MD"
                                    },
                                    "registration_number": {
                                        "description": "Medical registration number",
                                        "type": "string",
                                        "example": "ABC123456"
                                    },
                                    "experience_years": {
                                        "description": "Years of experience",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "title": {
                                        "description": "Professional title",
                                        "type": "string",
                                        "example": "Dr."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Professional info updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Professional information updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "onboarding_step": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "completion_percentage": {
                                                    "type": "integer",
                                                    "example": 40
                                                },
                                                "detected_specialization": {
                                                    "description": "Auto-detected specialization from qualification",
                                                    "type": "string",
                                                    "example": "Allopathy"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/onboarding/clinic-info": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Update clinic information",
                "description": "Step 2.2: Update doctor's clinic/hospital information",
                "operationId": "9bce1dc03592e7c963eecd2880e94e92",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "clinic_name": {
                                        "description": "Clinic/Hospital name",
                                        "type": "string",
                                        "example": "City Medical Center"
                                    },
                                    "clinic_address": {
                                        "description": "Clinic address",
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "clinic_city": {
                                        "description": "City",
                                        "type": "string",
                                        "example": "Mumbai"
                                    },
                                    "clinic_state": {
                                        "description": "State",
                                        "type": "string",
                                        "example": "Maharashtra"
                                    },
                                    "clinic_pincode": {
                                        "description": "Pincode",
                                        "type": "string",
                                        "example": "400001"
                                    },
                                    "clinic_phone": {
                                        "description": "Clinic phone number",
                                        "type": "string",
                                        "example": "+91-22-12345678"
                                    },
                                    "consultation_fees": {
                                        "description": "Consultation fees",
                                        "type": "object",
                                        "example": {
                                            "general": 500,
                                            "followup": 300
                                        }
                                    },
                                    "working_hours": {
                                        "description": "Working hours",
                                        "type": "object",
                                        "example": {
                                            "monday": {
                                                "start": "09:00",
                                                "end": "17:00",
                                                "available": true
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Clinic info updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clinic information updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "onboarding_step": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "completion_percentage": {
                                                    "type": "integer",
                                                    "example": 70
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/onboarding/upload-documents": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Upload documents",
                "description": "Step 2.3: Upload profile photo and documents (optional)",
                "operationId": "80355ba14eb16aa37c0e7261b2543811",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "profile_photo": {
                                        "description": "Profile photo file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "documents": {
                                        "description": "Certificate/License files",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "document_types": {
                                        "description": "Types of documents (optional, defaults to certificate)",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "certificate",
                                                "license",
                                                "id_card",
                                                "degree"
                                            ]
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Documents uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Documents uploaded successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "onboarding_step": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "completion_percentage": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "profile_photo_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/profile_photo.jpg"
                                                },
                                                "document_urls": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "extracted_data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "document_type": {
                                                                "type": "string",
                                                                "example": "certificate"
                                                            },
                                                            "structured_data": {
                                                                "properties": {
                                                                    "doctor_name": {
                                                                        "type": "string",
                                                                        "example": "Dr. John Doe"
                                                                    },
                                                                    "registration_number": {
                                                                        "type": "string",
                                                                        "example": "ABC123456"
                                                                    },
                                                                    "qualification": {
                                                                        "type": "string",
                                                                        "example": "MBBS, MD"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "confidence": {
                                                                "type": "number",
                                                                "example": 0.92
                                                            },
                                                            "validation": {
                                                                "properties": {
                                                                    "is_valid": {
                                                                        "type": "boolean",
                                                                        "example": true
                                                                    },
                                                                    "confidence_score": {
                                                                        "type": "number",
                                                                        "example": 0.92
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "ai_processing_enabled": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/onboarding/complete": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Complete onboarding",
                "description": "Mark onboarding as completed",
                "operationId": "51b4de76a83319c40b4ba820124d60b9",
                "responses": {
                    "200": {
                        "description": "Onboarding completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Onboarding completed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "onboarding_completed": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "completion_percentage": {
                                                    "type": "integer",
                                                    "example": 100
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/onboarding/status": {
            "get": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Get onboarding status",
                "description": "Get current onboarding status and completion percentage",
                "operationId": "4d3f2b56a5fd48f22670a1104782fd23",
                "responses": {
                    "200": {
                        "description": "Onboarding status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "onboarding_step": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "onboarding_completed": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "completion_percentage": {
                                                    "type": "integer",
                                                    "example": 40
                                                },
                                                "next_steps": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/patients": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get all patients",
                "description": "Retrieve a paginated list of all patients for the authenticated doctor's practice",
                "operationId": "b9c0b408f3511800a33df4178b575584",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of patients per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for patient name or ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "John"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patients retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Patient"
                                                    }
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Create a new patient",
                "description": "Add a new patient to the practice",
                "operationId": "61950fddd8517abd752f4bae3f7e1f95",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "phone",
                                    "date_of_birth",
                                    "gender"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "Patient's first name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "Patient's last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "description": "Patient's email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "description": "Patient's phone number",
                                        "type": "string",
                                        "example": "+91-9876543210"
                                    },
                                    "alternate_phone": {
                                        "description": "Alternate phone number",
                                        "type": "string",
                                        "example": "+91-9876543211",
                                        "nullable": true
                                    },
                                    "date_of_birth": {
                                        "description": "Patient's date of birth",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-15"
                                    },
                                    "gender": {
                                        "description": "Patient's gender",
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    },
                                    "blood_group": {
                                        "description": "Blood group",
                                        "type": "string",
                                        "example": "A+",
                                        "nullable": true
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string",
                                        "example": "123 Main St, City",
                                        "nullable": true
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string",
                                        "example": "Mumbai",
                                        "nullable": true
                                    },
                                    "state": {
                                        "description": "State",
                                        "type": "string",
                                        "example": "Maharashtra",
                                        "nullable": true
                                    },
                                    "pincode": {
                                        "description": "Pincode",
                                        "type": "string",
                                        "example": "400001",
                                        "nullable": true
                                    },
                                    "emergency_contact_name": {
                                        "description": "Emergency contact name",
                                        "type": "string",
                                        "example": "Jane Doe",
                                        "nullable": true
                                    },
                                    "emergency_contact_phone": {
                                        "description": "Emergency contact phone",
                                        "type": "string",
                                        "example": "+91-9876543212",
                                        "nullable": true
                                    },
                                    "medical_history": {
                                        "description": "Medical history",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Diabetes",
                                            "Hypertension"
                                        ],
                                        "nullable": true
                                    },
                                    "allergies": {
                                        "description": "Known allergies",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Penicillin",
                                            "Dust"
                                        ],
                                        "nullable": true
                                    },
                                    "medications": {
                                        "description": "Current medications",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Metformin",
                                            "Lisinopril"
                                        ],
                                        "nullable": true
                                    },
                                    "notes": {
                                        "description": "Additional notes",
                                        "type": "string",
                                        "example": "Patient notes",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Patient created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Patient"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/patients/{id}": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get patient details",
                "description": "Retrieve detailed information about a specific patient",
                "operationId": "4abd7d79081d22b0cc0977dace111a67",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Patient"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Patients"
                ],
                "summary": "Update patient information",
                "description": "Update patient details",
                "operationId": "8fe660040da4932f864bf9f4ba9fac92",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "Patient's first name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "Patient's last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "description": "Patient's email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "description": "Patient's phone number",
                                        "type": "string",
                                        "example": "+91-9876543210"
                                    },
                                    "alternate_phone": {
                                        "description": "Alternate phone number",
                                        "type": "string",
                                        "example": "+91-9876543211",
                                        "nullable": true
                                    },
                                    "date_of_birth": {
                                        "description": "Patient's date of birth",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-15"
                                    },
                                    "gender": {
                                        "description": "Patient's gender",
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    },
                                    "blood_group": {
                                        "description": "Blood group",
                                        "type": "string",
                                        "example": "A+",
                                        "nullable": true
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string",
                                        "example": "123 Main St, City",
                                        "nullable": true
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string",
                                        "example": "Mumbai",
                                        "nullable": true
                                    },
                                    "state": {
                                        "description": "State",
                                        "type": "string",
                                        "example": "Maharashtra",
                                        "nullable": true
                                    },
                                    "pincode": {
                                        "description": "Pincode",
                                        "type": "string",
                                        "example": "400001",
                                        "nullable": true
                                    },
                                    "emergency_contact_name": {
                                        "description": "Emergency contact name",
                                        "type": "string",
                                        "example": "Jane Doe",
                                        "nullable": true
                                    },
                                    "emergency_contact_phone": {
                                        "description": "Emergency contact phone",
                                        "type": "string",
                                        "example": "+91-9876543212",
                                        "nullable": true
                                    },
                                    "medical_history": {
                                        "description": "Medical history",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Diabetes",
                                            "Hypertension"
                                        ],
                                        "nullable": true
                                    },
                                    "allergies": {
                                        "description": "Known allergies",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Penicillin",
                                            "Dust"
                                        ],
                                        "nullable": true
                                    },
                                    "medications": {
                                        "description": "Current medications",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Metformin",
                                            "Lisinopril"
                                        ],
                                        "nullable": true
                                    },
                                    "notes": {
                                        "description": "Additional notes",
                                        "type": "string",
                                        "example": "Patient notes",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Patient"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Patients"
                ],
                "summary": "Delete patient",
                "description": "Soft delete a patient (mark as inactive)",
                "operationId": "1e5720455f7244630af037e8ec1e83f0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/ai/profile/analyze": {
            "get": {
                "tags": [
                    "Profile Completeness"
                ],
                "summary": "Analyze profile completeness",
                "description": "Get AI-powered analysis of profile completeness with suggestions",
                "operationId": "f02572a9c96ddbed1ba1b44806709caf",
                "responses": {
                    "200": {
                        "description": "Profile analysis completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "completion_percentage": {
                                                    "type": "integer",
                                                    "example": 75
                                                },
                                                "basic_analysis": {
                                                    "properties": {
                                                        "completion_percentage": {
                                                            "type": "integer",
                                                            "example": 75
                                                        },
                                                        "total_fields": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "completed_fields": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "missing_fields": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "critical_missing": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "important_missing": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "ai_suggestions": {
                                                    "properties": {
                                                        "priority_actions": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "engagement_suggestions": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "professional_development": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "impact_analysis": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "priority_actions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "action": {
                                                                "type": "string",
                                                                "example": "Complete your full name"
                                                            },
                                                            "field": {
                                                                "type": "string",
                                                                "example": "name"
                                                            },
                                                            "priority": {
                                                                "type": "string",
                                                                "example": "high"
                                                            },
                                                            "estimated_time": {
                                                                "type": "string",
                                                                "example": "2-5 minutes"
                                                            },
                                                            "impact": {
                                                                "type": "string",
                                                                "example": "Critical for profile completion"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "estimated_time_to_complete": {
                                                    "type": "string",
                                                    "example": "30 minutes"
                                                },
                                                "impact_score": {
                                                    "type": "integer",
                                                    "example": 85
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/ai/profile/suggestions": {
            "get": {
                "tags": [
                    "Profile Completeness"
                ],
                "summary": "Get profile optimization suggestions",
                "description": "Get specific suggestions for improving profile completeness",
                "operationId": "b74a5ac3cc370af80ac14d98041e729b",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Category of suggestions",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "completeness",
                                "engagement",
                                "professional",
                                "all"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Suggestions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "completeness": {
                                                    "properties": {
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Profile Completeness"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Complete all required fields to increase patient trust"
                                                        },
                                                        "tips": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "engagement": {
                                                    "properties": {
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Patient Engagement"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Optimize your profile for better patient interaction"
                                                        },
                                                        "tips": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "professional": {
                                                    "properties": {
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Professional Development"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Enhance your professional credibility"
                                                        },
                                                        "tips": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/ai/profile/optimize": {
            "post": {
                "tags": [
                    "Profile Completeness"
                ],
                "summary": "Get personalized optimization recommendations",
                "description": "Get AI-powered personalized recommendations for profile optimization",
                "operationId": "4a91cd464574b839e8adb49a4fd7e22f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "focus_area": {
                                        "description": "Area to focus optimization on",
                                        "type": "string",
                                        "enum": [
                                            "completeness",
                                            "engagement",
                                            "professional",
                                            "all"
                                        ],
                                        "example": "all"
                                    },
                                    "time_available": {
                                        "description": "Time available for optimization",
                                        "type": "string",
                                        "example": "30 minutes"
                                    },
                                    "goals": {
                                        "description": "Optimization goals",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "increase_patients",
                                            "build_trust",
                                            "professional_growth"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Optimization recommendations generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "recommendations": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "action": {
                                                                "type": "string",
                                                                "example": "Add a professional bio"
                                                            },
                                                            "reason": {
                                                                "type": "string",
                                                                "example": "Builds patient trust and credibility"
                                                            },
                                                            "estimated_time": {
                                                                "type": "string",
                                                                "example": "10 minutes"
                                                            },
                                                            "impact": {
                                                                "type": "string",
                                                                "example": "High"
                                                            },
                                                            "category": {
                                                                "type": "string",
                                                                "example": "engagement"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "priority_order": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "estimated_total_time": {
                                                    "type": "string",
                                                    "example": "45 minutes"
                                                },
                                                "expected_improvement": {
                                                    "type": "string",
                                                    "example": "Profile completeness will increase from 75% to 95%"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/social/google/redirect": {
            "get": {
                "tags": [
                    "Social Authentication"
                ],
                "summary": "Redirect to Google OAuth",
                "description": "Redirects user to Google OAuth consent screen for authentication",
                "operationId": "45f7e404f89a1501ddf85be970aa67b2",
                "responses": {
                    "200": {
                        "description": "Redirect URL generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "redirect_url": {
                                            "description": "Google OAuth authorization URL",
                                            "type": "string",
                                            "example": "https://accounts.google.com/oauth/authorize?..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to redirect to Google",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to redirect to Google. Please try again."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/social/google/callback": {
            "get": {
                "tags": [
                    "Social Authentication"
                ],
                "summary": "Handle Google OAuth callback",
                "description": "Processes Google OAuth callback and authenticates/registers user",
                "operationId": "232ade6a9e425e0c08e2c9beae3245e1",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Authorization code from Google",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State parameter for CSRF protection",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "user_type": {
                                                            "type": "string",
                                                            "example": "patient"
                                                        },
                                                        "avatar": {
                                                            "type": "string",
                                                            "example": "https://lh3.googleusercontent.com/..."
                                                        },
                                                        "provider": {
                                                            "type": "string",
                                                            "example": "google"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Registration and login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration and login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "user_type": {
                                                            "type": "string",
                                                            "example": "patient"
                                                        },
                                                        "avatar": {
                                                            "type": "string",
                                                            "example": "https://lh3.googleusercontent.com/..."
                                                        },
                                                        "provider": {
                                                            "type": "string",
                                                            "example": "google"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Google authentication failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Google authentication failed. Please try again."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/social/facebook/redirect": {
            "get": {
                "tags": [
                    "Social Authentication"
                ],
                "summary": "Redirect to Facebook OAuth",
                "description": "Redirects user to Facebook OAuth consent screen for authentication",
                "operationId": "8ac2d7aec91d20350fa1be7e93790a4e",
                "responses": {
                    "200": {
                        "description": "Redirect URL generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "redirect_url": {
                                            "description": "Facebook OAuth authorization URL",
                                            "type": "string",
                                            "example": "https://www.facebook.com/v18.0/dialog/oauth?..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to redirect to Facebook",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to redirect to Facebook. Please try again."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/social/facebook/callback": {
            "get": {
                "tags": [
                    "Social Authentication"
                ],
                "summary": "Handle Facebook OAuth callback",
                "description": "Processes Facebook OAuth callback and authenticates/registers user",
                "operationId": "87c8dfe8ee981df83f93b4b5ce6dee09",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Authorization code from Facebook",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State parameter for CSRF protection",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "user_type": {
                                                            "type": "string",
                                                            "example": "patient"
                                                        },
                                                        "avatar": {
                                                            "type": "string",
                                                            "example": "https://platform-lookaside.fbsbx.com/..."
                                                        },
                                                        "provider": {
                                                            "type": "string",
                                                            "example": "facebook"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Registration and login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration and login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "user_type": {
                                                            "type": "string",
                                                            "example": "patient"
                                                        },
                                                        "avatar": {
                                                            "type": "string",
                                                            "example": "https://platform-lookaside.fbsbx.com/..."
                                                        },
                                                        "provider": {
                                                            "type": "string",
                                                            "example": "facebook"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Facebook authentication failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Facebook authentication failed. Please try again."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/social/login-with-token": {
            "post": {
                "tags": [
                    "Social Authentication"
                ],
                "summary": "Social login with access token",
                "description": "Authenticate using social provider access token (for mobile applications)",
                "operationId": "ee5cdfbceb2f5ef482f35655f03cfa3f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "provider",
                                    "access_token"
                                ],
                                "properties": {
                                    "provider": {
                                        "description": "Social authentication provider",
                                        "type": "string",
                                        "enum": [
                                            "google",
                                            "facebook"
                                        ],
                                        "example": "google"
                                    },
                                    "access_token": {
                                        "description": "Access token from the social provider",
                                        "type": "string",
                                        "example": "ya29.a0AfH6SMC..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "user_type": {
                                                            "type": "string",
                                                            "example": "patient"
                                                        },
                                                        "avatar": {
                                                            "type": "string",
                                                            "example": "https://lh3.googleusercontent.com/..."
                                                        },
                                                        "provider": {
                                                            "type": "string",
                                                            "example": "google"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Registration and login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration and login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "user_type": {
                                                            "type": "string",
                                                            "example": "patient"
                                                        },
                                                        "avatar": {
                                                            "type": "string",
                                                            "example": "https://lh3.googleusercontent.com/..."
                                                        },
                                                        "provider": {
                                                            "type": "string",
                                                            "example": "google"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Google authentication failed. Invalid access token."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The provider field is required."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication failed. Please try again."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "SuccessResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation successful"
                    },
                    "data": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Error occurred"
                    },
                    "errors": {
                        "description": "Validation errors if any",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Validation errors"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "UnauthorizedError": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Unauthorized"
                    }
                },
                "type": "object"
            },
            "NotFoundError": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Resource not found"
                    }
                },
                "type": "object"
            },
            "Patient": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "patient_id": {
                        "type": "string",
                        "example": "PAT-ABC12345"
                    },
                    "practice_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@example.com",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "example": "+91-9876543210"
                    },
                    "alternate_phone": {
                        "type": "string",
                        "example": "+91-9876543211",
                        "nullable": true
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-15"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other"
                        ],
                        "example": "male"
                    },
                    "blood_group": {
                        "type": "string",
                        "example": "A+",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St, City",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "example": "Mumbai",
                        "nullable": true
                    },
                    "state": {
                        "type": "string",
                        "example": "Maharashtra",
                        "nullable": true
                    },
                    "pincode": {
                        "type": "string",
                        "example": "400001",
                        "nullable": true
                    },
                    "emergency_contact_name": {
                        "type": "string",
                        "example": "Jane Doe",
                        "nullable": true
                    },
                    "emergency_contact_phone": {
                        "type": "string",
                        "example": "+91-9876543212",
                        "nullable": true
                    },
                    "medical_history": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "Diabetes",
                            "Hypertension"
                        ],
                        "nullable": true
                    },
                    "allergies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "Penicillin",
                            "Dust"
                        ],
                        "nullable": true
                    },
                    "medications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "Metformin",
                            "Lisinopril"
                        ],
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "example": "Patient notes",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Appointment": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "doctor_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "patient_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "practice_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "appointment_number": {
                        "type": "string",
                        "example": "APT-2025001"
                    },
                    "appointment_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15"
                    },
                    "appointment_time": {
                        "type": "string",
                        "example": "10:00:00"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "consultation",
                            "follow_up",
                            "emergency",
                            "surgery",
                            "other"
                        ],
                        "example": "consultation"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "scheduled",
                            "confirmed",
                            "in_progress",
                            "completed",
                            "cancelled",
                            "no_show"
                        ],
                        "example": "scheduled"
                    },
                    "reason": {
                        "type": "string",
                        "example": "Regular checkup",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "example": "Appointment notes",
                        "nullable": true
                    },
                    "fee": {
                        "type": "number",
                        "format": "decimal",
                        "example": 500,
                        "nullable": true
                    },
                    "payment_status": {
                        "type": "boolean",
                        "example": false
                    },
                    "confirmed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "cancelled_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "cancellation_reason": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Prescription": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "doctor_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "patient_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "appointment_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "practice_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "prescription_number": {
                        "type": "string",
                        "example": "PRES-2025001"
                    },
                    "prescription_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15"
                    },
                    "chief_complaint": {
                        "type": "string",
                        "example": "Fever and cough",
                        "nullable": true
                    },
                    "diagnosis": {
                        "type": "string",
                        "example": "Upper respiratory infection",
                        "nullable": true
                    },
                    "medicines": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Paracetamol"
                                },
                                "dosage": {
                                    "type": "string",
                                    "example": "500mg"
                                },
                                "frequency": {
                                    "type": "string",
                                    "example": "3 times a day"
                                },
                                "duration": {
                                    "type": "string",
                                    "example": "5 days"
                                },
                                "instructions": {
                                    "type": "string",
                                    "example": "Take after meals"
                                }
                            },
                            "type": "object"
                        },
                        "example": [
                            {
                                "name": "Paracetamol",
                                "dosage": "500mg",
                                "frequency": "3 times a day",
                                "duration": "5 days",
                                "instructions": "Take after meals"
                            }
                        ]
                    },
                    "instructions": {
                        "type": "string",
                        "example": "Rest and drink plenty of fluids",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "example": "Prescription notes",
                        "nullable": true
                    },
                    "follow_up_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-22",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "MedicalRecord": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "doctor_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "patient_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "appointment_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "practice_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "record_number": {
                        "type": "string",
                        "example": "REC-2025001"
                    },
                    "record_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "consultation",
                            "lab_report",
                            "imaging",
                            "surgery",
                            "vaccination",
                            "other"
                        ],
                        "example": "consultation"
                    },
                    "title": {
                        "type": "string",
                        "example": "Consultation Report"
                    },
                    "content": {
                        "type": "string",
                        "example": "Detailed medical record content"
                    },
                    "vital_signs": {
                        "properties": {
                            "blood_pressure": {
                                "type": "string",
                                "example": "120/80"
                            },
                            "heart_rate": {
                                "type": "integer",
                                "example": 72
                            },
                            "temperature": {
                                "type": "number",
                                "format": "float",
                                "example": 98.6
                            },
                            "weight": {
                                "type": "number",
                                "format": "float",
                                "example": 70.5
                            },
                            "height": {
                                "type": "number",
                                "format": "float",
                                "example": 175
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "filename": {
                                    "type": "string",
                                    "example": "lab_report.pdf"
                                },
                                "url": {
                                    "type": "string",
                                    "example": "/uploads/lab_report.pdf"
                                },
                                "type": {
                                    "type": "string",
                                    "example": "application/pdf"
                                }
                            },
                            "type": "object"
                        },
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "example": "Additional notes",
                        "nullable": true
                    },
                    "is_private": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter JWT Bearer token",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Onboarding",
            "description": "Onboarding endpoints"
        },
        {
            "name": "AI Assistant",
            "description": "AI Assistant"
        },
        {
            "name": "Authentication",
            "description": "Authentication endpoints"
        },
        {
            "name": "Social Authentication",
            "description": "Social authentication endpoints"
        },
        {
            "name": "Dashboard",
            "description": "Dashboard and analytics endpoints"
        },
        {
            "name": "Patients",
            "description": "Patient management endpoints"
        },
        {
            "name": "Appointments",
            "description": "Appointment scheduling and management endpoints"
        },
        {
            "name": "AI Onboarding Assistant",
            "description": "AI Onboarding Assistant"
        },
        {
            "name": "Document Processing",
            "description": "Document Processing"
        },
        {
            "name": "Language Support",
            "description": "Language Support"
        },
        {
            "name": "Profile Completeness",
            "description": "Profile Completeness"
        }
    ]
}